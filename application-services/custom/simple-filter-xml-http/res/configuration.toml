[Writable]
LogLevel = 'INFO'
    [Writable.StoreAndForward]
    Enabled = false
    RetryInterval = '5m'
    MaxRetryCount = 10

[Service]
BootTimeout = '30s'
ClientMonitor = '15s'
CheckInterval = '10s'
Host = 'localhost'
Port = 48095
Protocol = 'http'
ReadMaxLimit = 100
StartupMsg = 'This is a sample Filter/XML/HTTP Transform Application Service'
Timeout = '30s'

[Registry]
Host = 'localhost'
Port = 8500
Type = 'consul'

# Database is require when Store and Forward is enabled
[Database]
Type = "redisdb"
Host = "localhost"
Port = 6379
Timeout = "30s"

# SecretStore is required when Store and Forward is enabled and running with security
# so Database credentials can be pulled from Vault.
# Note when running in docker from compose file set the following environment variables:
#   - SecretStore_Host: edgex-vault
[SecretStore]
Type = 'vault'
Host = 'localhost'
Port = 8200
Path = '/v1/secret/edgex/app-service-sample/'
Protocol = 'http'
RootCaCertPath = ''
ServerName = ''
TokenFile = '/tmp/edgex/secrets/app-service-sample/secrets-token.json'
AdditionalRetryAttempts = 10
RetryWaitPeriod = "1s"
  [SecretStore.Authentication]
  AuthType = 'X-Vault-Token'

[Clients]
  [Clients.edgex-core-data]
  Protocol = 'http'
  Host = 'localhost'
  Port = 48080

# Choose either an HTTP trigger or edgex-messagebus trigger

#[Trigger]
#Type="http"

[Trigger]
Type="edgex-messagebus"
SubscribeTopics="edgex/events/#"
PublishTopic="example"
  [Trigger.EdgexMessageBus]
  Type = "redisstreams"
    [Trigger.EdgexMessageBus.SubscribeHost]
    Host = "localhost"
    Port = 6379
    Protocol = "redis"
    [Trigger.EdgexMessageBus.PublishHost]
    Host = "localhost"
    Port = 6379
    Protocol = "redis"

# App Service specifc simple settings
# Great for single string settings
[ApplicationSettings]
DeviceNames = "Random-Float-Device, Random-Integer-Device"
HttpExportUrl = "https://3ff26601-1945-41e3-96b8-27cf446df696.mock.pstmn.io" # TODO: Replace with your endpoint